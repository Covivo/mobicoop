[1mdiff --git a/client/src/MobicoopBundle/Event/Controller/EventController.php b/client/src/MobicoopBundle/Event/Controller/EventController.php[m
[1mindex 180ac470..f80b8416 100644[m
[1m--- a/client/src/MobicoopBundle/Event/Controller/EventController.php[m
[1m+++ b/client/src/MobicoopBundle/Event/Controller/EventController.php[m
[36m@@ -53,9 +53,21 @@[m [mclass EventController extends AbstractController[m
         $eventComing = $eventManager->getEvents();[m
         $eventPassed = $eventManager->getEvents(0);[m
 [m
[32m+[m[32m        if ($eventComing !== null ){[m
[32m+[m[32m            $pointsComing = [];[m
[32m+[m[32m                foreach ($eventComing as $event) {[m
[32m+[m[32m                    $pointsComing[] = [[m
[32m+[m[32m                        "title"=>$event->getAddress()->getDisplayLabel(),[m
[32m+[m[32m                        "latLng"=>["lat"=>$event->getAddress()->getLatitude(),"lon"=>$event->getAddress()->getLongitude()][m
[32m+[m[32m                    ];[m
[32m+[m[32m                }[m
[32m+[m
[32m+[m[32m        }[m
[32m+[m
         return $this->render('@Mobicoop/event/events.html.twig', [[m
             'eventComing' => $eventComing,[m
             'eventPassed' => $eventPassed,[m
[32m+[m[32m            'pointComing' => $pointsComing[m
         ]);[m
     }[m
     /**[m
[36m@@ -137,5 +149,27 @@[m [mclass EventController extends AbstractController[m
         return new Response(json_encode($points));[m
     }[m
 [m
[32m+[m[32m    /**[m
[32m+[m[32m     * Get all events available (ajax)[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param EventManager $eventManager[m
[32m+[m[32m     */[m
[32m+[m[32m    public function eventsAvailable(EventManager $eventManager)[m
[32m+[m[32m    {[m
[32m+[m[32m        $eventComing = $eventManager->getEvents();[m
[32m+[m
[32m+[m[32m        $points = [];[m
[32m+[m[32m        if ($eventComing!==null) {[m
[32m+[m[32m            foreach ($eventComing as $event) {[m
[32m+[m
[32m+[m[32m                $points[] = [[m
[32m+[m[32m                    "title"=>$event->getAddress()->getDisplayLabel(),[m
[32m+[m[32m                    "latLng"=>["lat"=>$event->getAddress()->getLatitude(),"lon"=>$event->getAddress()->getLongitude()][m
[32m+[m[32m                ];[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return new Response(json_encode($points));[m
[32m+[m[32m    }[m
 [m
 }[m
[1mdiff --git a/client/src/MobicoopBundle/Resources/assets/js/components/event/Event.vue b/client/src/MobicoopBundle/Resources/assets/js/components/event/Event.vue[m
[1mindex a7f84baf..616cb60c 100755[m
[1m--- a/client/src/MobicoopBundle/Resources/assets/js/components/event/Event.vue[m
[1m+++ b/client/src/MobicoopBundle/Resources/assets/js/components/event/Event.vue[m
[36m@@ -315,8 +315,8 @@[m [mexport default {[m
     },[m
     publish() {[m
       let lParams = {[m
[31m-        origin: null,[m
[31m-        destination: null,[m
[32m+[m[32m        origin: JSON.stringify(this.destination),[m
[32m+[m[32m        destination: JSON.stringify(this.destination),[m
         regular: null,[m
         date: null,[m
         time: null,[m
[36m@@ -325,6 +325,9 @@[m [mexport default {[m
       this.post(`${this.$t("buttons.publish.route")}`, lParams);[m
     },[m
     getEventProposals () {[m
[32m+[m
[32m+[m[32m      console.info(this.$refs)[m
[32m+[m[32m      console.info(this.mmap)[m
       this.loadingMap = true;[m
       axios[m
 [m
[1mdiff --git a/client/src/MobicoopBundle/Resources/assets/js/components/event/EventList.vue b/client/src/MobicoopBundle/Resources/assets/js/components/event/EventList.vue[m
[1mindex f552cc44..d338adef 100644[m
[1m--- a/client/src/MobicoopBundle/Resources/assets/js/components/event/EventList.vue[m
[1m+++ b/client/src/MobicoopBundle/Resources/assets/js/components/event/EventList.vue[m
[36m@@ -72,6 +72,32 @@[m
             <v-card class="pa-6">[m
               <v-card-title>[m
                 <v-row>[m
[32m+[m[32m                  <v-col[m
[32m+[m[32m                    cols="8"[m
[32m+[m[32m                  >[m
[32m+[m[32m                    <v-card[m
[32m+[m[32m                      v-show="loadingMap"[m
[32m+[m[32m                      flat[m
[32m+[m[32m                      align="center"[m
[32m+[m[32m                      height="500"[m
[32m+[m[32m                      color="backSpiner"[m
[32m+[m[32m                    >[m
[32m+[m[32m                      <v-progress-circular[m
[32m+[m[32m                        size="250"[m
[32m+[m[32m                        indeterminate[m
[32m+[m[32m                        color="tertiary"[m
[32m+[m[32m                      />[m
[32m+[m[32m                    </v-card>[m
[32m+[m[32m                    <m-map[m
[32m+[m[32m                      v-show="!loadingMap"[m
[32m+[m[32m                      ref="mapComing"[m
[32m+[m[32m                      :points="pointsComingMap"[m
[32m+[m[32m                      :provider="mapProvider"[m
[32m+[m[32m                      :url-tiles="urlTiles"[m
[32m+[m[32m                      :attribution-copyright="attributionCopyright"[m
[32m+[m[32m                    />[m
[32m+[m[32m                  </v-col>[m
[32m+[m
                   <v-col[m
                     cols="6"[m
                   >[m
[36m@@ -210,16 +236,19 @@[m
 [m
 <script>[m
 [m
[32m+[m[32mimport axios from "axios";[m
 import { merge } from "lodash";[m
 import Translations from "@translations/components/event/EventList.json";[m
 import TranslationsClient from "@clientTranslations/components/event/EventList.json";[m
[32m+[m[32mimport MMap from "@components/utilities/MMap"[m
[32m+[m[32mimport L from "leaflet";[m
 import EventListItem from "@components/event/EventListItem";[m
 [m
 let TranslationsMerged = merge(Translations, TranslationsClient);[m
 [m
 export default {[m
   components:{[m
[31m-    EventListItem[m
[32m+[m[32m    EventListItem,MMap[m
   },[m
   i18n: {[m
     messages: TranslationsMerged,[m
[36m@@ -236,7 +265,19 @@[m [mexport default {[m
     paths: {[m
       type: Object,[m
       default: null[m
[31m-    }[m
[32m+[m[32m    },[m
[32m+[m[32m    mapProvider:{[m
[32m+[m[32m      type: String,[m
[32m+[m[32m      default: ""[m
[32m+[m[32m    },[m
[32m+[m[32m    urlTiles:{[m
[32m+[m[32m      type: String,[m
[32m+[m[32m      default: ""[m
[32m+[m[32m    },[m
[32m+[m[32m    attributionCopyright:{[m
[32m+[m[32m      type: String,[m
[32m+[m[32m      default: ""[m
[32m+[m[32m    },[m
   },[m
   data () {[m
     return {[m
[36m@@ -254,9 +295,106 @@[m [mexport default {[m
         { text: 'Nom', value: 'name' },[m
         { text: 'Description', value: 'fulldescription' },[m
         { text: 'Image', value: 'logos' }[m
[31m-      ][m
[32m+[m[32m      ],[m
[32m+[m[32m      loadingMap: false,[m
[32m+[m[32m      errorUpdate: false,[m
[32m+[m[32m      pointsComing: [],[m
[32m+[m[32m      pointsComingMap : [],[m
     }[m
   },[m
[32m+[m[32m  mounted() {[m
[32m+[m[32m    this.createMapComing();[m
[32m+[m[32m  },[m
[32m+[m[32m  methods:{[m
[32m+[m[32m    searchChanged: function (search) {[m
[32m+[m[32m      this.origin = search.origin;[m
[32m+[m[32m      this.destination = search.destination;[m
[32m+[m[32m      this.dataRegular = search.regular;[m
[32m+[m[32m      this.date = search.date;[m
[32m+[m[32m    },[m
[32m+[m[32m    post: function (path, params, method='post') {[m
[32m+[m[32m      const form = document.createElement('form');[m
[32m+[m[32m      form.method = method;[m
[32m+[m[32m      form.action = window.location.origin+'/'+path;[m
[32m+[m
[32m+[m[32m      for (const key in params) {[m
[32m+[m[32m        if (params.hasOwnProperty(key)) {[m
[32m+[m[32m          const hiddenField = document.createElement('input');[m
[32m+[m[32m          hiddenField.type = 'hidden';[m
[32m+[m[32m          hiddenField.name = key;[m
[32m+[m[32m          hiddenField.value = params[key];[m
[32m+[m[32m          form.appendChild(hiddenField);[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[32m      document.body.appendChild(form);[m
[32m+[m[32m      form.submit();[m
[32m+[m[32m    },[m
[32m+[m[32m    checkIfUserLogged() {[m
[32m+[m[32m      if (this.user !== null) {[m
[32m+[m[32m        this.isLogged = true;[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m
[32m+[m[32m    buildPoint: function(lat,lng,title="",pictoUrl="",size=[],anchor=[]){[m
[32m+[m[32m      console.info(this.$refs)[m
[32m+[m[32m      let point = {[m
[32m+[m[32m        title:title,[m
[32m+[m[32m        latLng:L.latLng(lat, lng),[m
[32m+[m[32m        icon: {}[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      if(pictoUrl!==""){[m
[32m+[m[32m        point.icon = {[m
[32m+[m[32m          url:pictoUrl,[m
[32m+[m[32m          size:size,[m
[32m+[m[32m          anchor:anchor[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[32m      return point;[m
[32m+[m[32m    },[m
[32m+[m[32m    createMapComing () {[m
[32m+[m[32m      console.info(this.$refs)[m
[32m+[m[32m      console.info(this.$refs.mapComing)[m
[32m+[m[32m      console.info(this.mapComing)[m
[32m+[m
[32m+[m[32m      this.loadingMap = true;[m
[32m+[m
[32m+[m[32m      if(this.pointsComing != null){[m
[32m+[m[32m        this.pointsComing.forEach((waypoint, index) => {[m
[32m+[m[32m          this.pointsComingMap.push(this.buildPoint(waypoint.latLng.lat,waypoint.latLng.lon,waypoint.title));[m
[32m+[m[32m        });[m
[32m+[m[32m        this.loadingMap = false;[m
[32m+[m[32m        setTimeout(this.$refs.mapComing.redrawMap(),600);[m
[32m+[m[32m      }[m
[32m+[m[32m      /*[m
[32m+[m[32m                  axios[m
[32m+[m
[32m+[m[32m                    .get('/events-available',[m
[32m+[m[32m                      {[m
[32m+[m[32m                        headers:{[m
[32m+[m[32m                          'content-type': 'application/json'[m
[32m+[m[32m                        }[m
[32m+[m[32m                      })[m
[32m+[m[32m                    .then(res => {[m
[32m+[m
[32m+[m[32m                      this.errorUpdate = res.data.state;[m
[32m+[m[32m                      this.pointsToMap.length = 0;[m
[32m+[m[32m                      // add the community address to display on the map[m
[32m+[m[32m                      if (this.event.address) {[m
[32m+[m[32m                        this.pointsToMap.push(this.buildPoint(this.event.address.latitude,this.event.address.longitude,this.event.name));[m
[32m+[m[32m                      }[m
[32m+[m
[32m+[m[32m                      // add all the waypoints of the event to display on the map :[m
[32m+[m[32m                      res.data.forEach((waypoint, index) => {[m
[32m+[m[32m                        this.pointsToMap.push(this.buildPoint(waypoint.latLng.lat,waypoint.latLng.lon,waypoint.title));[m
[32m+[m[32m                      });[m
[32m+[m[32m                      this.loadingMap = false;[m
[32m+[m
[32m+[m[32m            });            setTimeout(this.$refs.mmap.redrawMap(),600);[m
[32m+[m[32m            */[m
[32m+[m[32m    },[m
[32m+[m
[32m+[m[32m  }[m
 }[m
 </script>[m
 [m
[1mdiff --git a/client/src/MobicoopBundle/Resources/config/routes.yaml b/client/src/MobicoopBundle/Resources/config/routes.yaml[m
[1mindex e6f56fc7..21493fc3 100644[m
[1m--- a/client/src/MobicoopBundle/Resources/config/routes.yaml[m
[1m+++ b/client/src/MobicoopBundle/Resources/config/routes.yaml[m
[36m@@ -474,11 +474,19 @@[m [mevent_show:[m
     requirements:[m
         id: '\d+'[m
 [m
[31m-# get all community proposals (AJAX)[m
[32m+[m[32m# get all event proposals (AJAX)[m
 event_proposals:[m
     path:[m
         fr: /event-proposals/{id}[m
         en: /event-proposals/{id}[m
     controller: Mobicoop\Bundle\MobicoopBundle\Event\Controller\EventController::eventProposals[m
     requirements:[m
[31m-        id: '\d+'[m
\ No newline at end of file[m
[32m+[m[32m        id: '\d+'[m
[32m+[m
[32m+[m[32m# get all event proposals (AJAX)[m
[32m+[m[32mevents_available:[m
[32m+[m[32m    path:[m
[32m+[m[32m        fr: /events-available[m
[32m+[m[32m        en: /events-available[m
[32m+[m[32m    controller: Mobicoop\Bundle\MobicoopBundle\Event\Controller\EventController::eventsAvailable[m
[41m+[m
[1mdiff --git a/client/src/MobicoopBundle/Resources/views/event/events.html.twig b/client/src/MobicoopBundle/Resources/views/event/events.html.twig[m
[1mindex ecf4b3bc..aa9245df 100644[m
[1m--- a/client/src/MobicoopBundle/Resources/views/event/events.html.twig[m
[1m+++ b/client/src/MobicoopBundle/Resources/views/event/events.html.twig[m
[36m@@ -26,6 +26,10 @@[m
                     :paths="{{ {'event_create':path('event_create')}|json_encode }}"[m
                     :eventscoming="{{ eventComing |json_encode }}"[m
                     :eventspassed="{{ eventPassed |json_encode }}"[m
[32m+[m[32m                    :points-coming="{{ pointComing|json_encode }}"[m
[32m+[m[32m                    :map-provider="{{ mapProvider|json_encode }}"[m
[32m+[m[32m                    :url-tiles="{{ urlTiles|json_encode }}"[m
[32m+[m[32m                    :attribution-copyright="{{ attributionCopyright|json_encode }}"[m
             ></event-list>[m
             <br/><br/>[m
         </div>[m
