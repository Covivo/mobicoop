# Docker image needed for CI
image: mobicoop/php-node-chromium:2.0.0

# Cache modules in between jobs
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:    # excluded : not cached
  - node_modules/

# Name of the stages that can be executed on a pipeline by the runner
stages:
  - deploy
  - prod_deploy
  - admin_test_deploy
  - admin_prod_deploy 
      
#
# Deployment for test branch
#
test_deploy:
  stage: deploy
  environment:
    name: test
    url: https://test.$$INSTANCE$$.mobicoop.io
  only:
    - /^*.-next$/
  # variables:
  #   APP_ENV: test   # /!\ important : symfony env variable /!\
  before_script:
    - git clone https://gitlab.com/mobicoop/instances/mobicoop-platform
    - cd mobicoop-platform && git checkout ${RELEASE_VERSION} && npm install --unsafe-perm && npm run install-all-instance-ci && cd ../src && ln -s ../mobicoop-platform/client/src/MobicoopBundle && cd ../
    - npm install --unsafe-perm
    # - npm run install-ci
  script:
    - echo "${SSH_TEST_PRIVATE_KEY}" > id_rsa
    - chmod 700 id_rsa
    - mv id_rsa ${HOME}/.ssh
    - echo "${SSH_TEST_HOST_KEY}" > "${HOME}/.ssh/known_hosts"
    - ssh -o StrictHostKeyChecking=no -p ${SSH_PORT} ${SSH_TEST_USER}@${SSH_TEST_IP} "cd /var/www/test/$$INSTANCE$$/; touch ./public/maintenance.enable; cd /var/www/test/$$INSTANCE$$/mobicoop-platform/api/; touch ./public/maintenance.enable;"    # put the site on maintenance
    - rsync --stats --quiet --group=www-data -rvzlt --exclude-from=.gitlab-exclude --delete --compress-level=9 -e "ssh -o StrictHostKeyChecking=no -p $SSH_PORT" ./ ${SSH_TEST_USER}@${SSH_TEST_IP}:/var/www/test/$$INSTANCE$$
    - ssh -o StrictHostKeyChecking=no -p ${SSH_PORT} ${SSH_TEST_USER}@${SSH_TEST_IP} "cd /var/www/test/$$INSTANCE$$/; chmod +x postDeploy.sh; ./postDeploy.sh --version=test --version-migrate=test --instance=$$INSTANCE$$"    # database migration and other after deploy works
  when: manual      # /!\ important : job executed manually /!\  
  except:
    refs:
      - tags    # job not executed on tags
    variables:
      - $CI_COMMIT_MESSAGE =~ /skipci/    # job not executed when commit message contains this expression

#
# Deployment for master branch
#
prod_deploy:
  stage: prod_deploy
  environment:
    name: prod
    url: https://$$INSTANCE$$.mobicoop.io
  only:     # job executed only on master branch
    - master
  # variables:
  #   APP_ENV: prod   # /!\ important : symfony env variable /!\
  before_script:
    - git clone https://gitlab.com/mobicoop/instances/mobicoop-platform
    - cd mobicoop-platform && git checkout master && npm install --unsafe-perm && npm run install-all-instance-ci && cd ../src && ln -s ../mobicoop-platform/client/src/MobicoopBundle && cd ../
    - npm install --unsafe-perm
    - npm run install-ci
  script:
    - echo "${SSH_PROD_PRIVATE_KEY}" > id_rsa
    - chmod 700 id_rsa
    - mv id_rsa ${HOME}/.ssh
    - echo "${SSH_PROD_HOST_KEY}" > "${HOME}/.ssh/known_hosts"
    - ssh -o StrictHostKeyChecking=no -p ${SSH_PORT} ${SSH_PROD_USER}@${SSH_PROD_IP} "cd /var/www/$$INSTANCE$$/prod/; touch ./public/maintenance.enable; cd /var/www/$$INSTANCE$$/prod/mobicoop-platform/api/; touch ./public/maintenance.enable;"    # put the site on maintenance
    - rsync --stats --quiet --group=www-data -rvzlt --exclude-from=.gitlab-exclude --delete --compress-level=9 -e "ssh -o StrictHostKeyChecking=no -p $SSH_PORT" ./ ${SSH_PROD_USER}@${SSH_PROD_IP}:/var/www/$$INSTANCE$$/prod
    - ssh -o StrictHostKeyChecking=no -p ${SSH_PORT} ${SSH_PROD_USER}@${SSH_PROD_IP} "cd /var/www/$$INSTANCE$$/prod/; chmod +x postDeploy.sh; ./postDeploy.sh --version=prod --version-migrate=prod --instance=$$INSTANCE$$"    # database migration and other after deploy works
  when: manual      # /!\ important : job executed manually /!\  

###############################################################################################
########## Admin                                                            ###################
###############################################################################################


admin_test_deploy:
  image: alpine:3.6
  stage: admin_test_deploy
  environment:
    name: test
    url: https://admin.test.$$INSTANCE$$.mobicoop.io
  only:
    - /^*.-next$/
  # variables:
  #   APP_ENV: test   # /!\ important : symfony env variable /!\
  before_script:
    - apk update && apk add openssh-client bash
  script:
    # run ssh-agent
    - eval $(ssh-agent -s)
    # add ssh key stored in SSH_TEST_PRIVATE_KEY variable to the agent store
    - bash -c 'ssh-add <(echo "$SSH_TEST_PRIVATE_KEY")'
    # create ssh directory
    - mkdir -p ~/.ssh
    # add server prod ip to known hosts
    - ssh-keyscan -H $SSH_TEST_IP >> ~/.ssh/known_hosts
    # disable strict host key checking, to avoid error if server ip changes !
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    # ru docker container
    - ssh -o StrictHostKeyChecking=no -p ${SSH_PORT} ${SSH_TEST_USER}@${SSH_TEST_IP} "cd /var/www/test/$$INSTANCE$$/; docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}; docker stop ${ADMIN_CONTAINER_NAME}; docker pull ${CI_REGISTRY_IMAGE}:${RELEASE_VERSION}; docker run -d --env-file=admin.env --name=${ADMIN_CONTAINER_NAME} -p 127.0.0.1:${ADMIN_DOCKER_PORT}:80/tcp --rm ${CI_REGISTRY_IMAGE}:${RELEASE_VERSION}"
  when: manual      # /!\ important : job executed manually /!\  
  except:
    refs:
      - tags    # job not executed on tags
    variables:
      - $CI_COMMIT_MESSAGE =~ /skipci/    # job not executed when commit message contains this expression

admin_prod_deploy:
  image: alpine:3.6
  stage: admin_prod_deploy
  environment:
    name: prod
    url: https://admin.test.$$INSTANCE$$.mobicoop.io
  only:
    - master
  # variables:
  #   APP_ENV: test   # /!\ important : symfony env variable /!\
  before_script:
    - apk update && apk add openssh-client bash
  script:
    # run ssh-agent
    - eval $(ssh-agent -s)
    # add ssh key stored in SSH_PROD_PRIVATE_KEY variable to the agent store
    - bash -c 'ssh-add <(echo "$SSH_PROD_PRIVATE_KEY")'
    # create ssh directory
    - mkdir -p ~/.ssh
    # add server prod ip to known hosts
    - ssh-keyscan -H $SSH_PROD_IP >> ~/.ssh/known_hosts
    # disable strict host key checking, to avoid error if server ip changes !
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    # ru docker container
    - ssh -o StrictHostKeyChecking=no -p ${SSH_PORT} ${SSH_PROD_USER}@${SSH_PROD_IP} "cd /var/www/$$INSTANCE$$/prod/; docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}; docker stop ${ADMIN_CONTAINER_NAME}; docker pull ${CI_REGISTRY_IMAGE}; docker run -d --env-file=admin.prod.env --name=${ADMIN_CONTAINER_NAME} -p 127.0.0.1:${ADMIN_DOCKER_PORT}:80/tcp --rm ${CI_REGISTRY_IMAGE}"
  when: manual      # /!\ important : job executed manually /!\  
  except:
    refs:
      - tags    # job not executed on tags
    variables:
      - $CI_COMMIT_MESSAGE =~ /skipci/    # job not executed when commit message contains this expression