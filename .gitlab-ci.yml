# Docker image needed for CI
image: mobicoop/php-node-chromium:2.0.0

services:
- mysql:latest

variables:
  # Configure mysql service (https://hub.docker.com/_/mysql/)
  MYSQL_DATABASE: mobicoop_platform
  MYSQL_ROOT_PASSWORD: root


# Cache modules in between jobs
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:    # excluded : not cached
  - node_modules/
  - api/node_modules/
  - api/vendor/
  - client/node_modules/
  - client/vendor/
  - admin/node_modules/

# Name of the stages that can be executed on a pipeline by the runner
stages:
  - tests
  - deploy
  - doc
  - reports


###############################################################################################
############# Everything under this is execute for all push (branch) ##########################
###############################################################################################

#
# Tests for all branches except dev, master & tagged branches
#
branch_features:   # name of the job
  stage: tests
#  variables:
#    APP_ENV: dev    # /!\ important : symfony env variable /!\
  before_script:
    - composer global require hirak/prestissimo
    # Install the packagees xvfb, libgtk2.0-0 and libgconf2-4, it must be moved to Dockerfile
    - sudo apt-get -y install xvfb 
    - sudo apt-get -y install libgtk2.0-0
    - sudo apt -y install libgconf2-4
    - npm install -g wait-on 
    - npm install -g yarn
    - yarn cache clean
    - npm install --unsafe-perm # Install the dependencies in the local node_modules folder
    - npm run install-all-ci # Install the dependencies in the local node_modules folder

  script:
    - npm test && cd api # run the tests
    - composer install && cd ..
    - npm run start & wait-on client/public/build/entrypoints.json
    - npm run test-functional-ci

  only:
    - pushes # job executed only on test
  except:       
    refs:   # job not executed for these branches & tags
      - tags    
      - dev
      - test
      - master
    variables:
      - $CI_COMMIT_MESSAGE =~ /skip/    # job not executed when commit message contains this expression


###############################################################################################
############# Everything under this is execute only for Dev env (dev) ############################
###############################################################################################

#
# Deployment for dev branch
#
dev_deploy:
  stage: deploy
  environment:
    name: dev
    url: https://dev.mobicoop.io
  only:
    - dev
#  variables:
#    APP_ENV: test   # /!\ important : symfony env variable /!\
  before_script:
    - composer global require hirak/prestissimo
    # Install the packagees xvfb, libgtk2.0-0 and libgconf2-4, it must be moved to Dockerfile
    - sudo apt-get -y install xvfb 
    - sudo apt-get -y install libgtk2.0-0
    - sudo apt -y install libgconf2-4
    - npm install -g wait-on 
    - npm install -g yarn
    - yarn cache clean
    - npm install --unsafe-perm # Install the dependencies in the local node_modules folder
    - npm run install-all-ci # Install the dependencies in the local node_modules folder
  script:
    - npm run test-and-coverage                                                   # run the tests and code coverage
    - php client/bin/console cache:clear --env=dev --no-debug     # clear the cache for the interfaces
    - php api/bin/console cache:clear --env=dev --no-debug                     # clear the cache for the api
    - echo "${SSH_DEV_PRIVATE_KEY}" > id_rsa                   # 
    - chmod 700 id_rsa                                          # ssh identification on docker side 
    - mv id_rsa ${HOME}/.ssh                                    #
    - echo "${SSH_DEV_HOST_KEY}" > "${HOME}/.ssh/known_hosts"  #
    - rsync --stats --quiet --group=www-data -hrvz --exclude-from=.gitlab-exclude --delete  -e 'ssh -o StrictHostKeyChecking=no' ./ ${SSH_DEV_USER}@${SSH_DEV_IP}:/var/www/mobicoop/dev    # rsync the files on the server
    - ssh -o StrictHostKeyChecking=no ${SSH_DEV_USER}@${SSH_DEV_IP} "cd /var/www/mobicoop/dev/api; php bin/console doctrine:migrations:migrate -n;cd /var/www/mobicoop/dev/admin;npm run build"    # database migration and admin build
  except:
    refs:
      - tags    # job not executed on tags



###############################################################################################
############# Everything under this is execute only for Test env (test) ###################
###############################################################################################

#
# Deployment for test branch
#
test_deploy:
  stage: deploy
  environment:
    name: test
    url: https://test.mobicoop.io
  only:
    - test
#  variables:
#    APP_ENV: test   # /!\ important : symfony env variable /!\
  before_script:
    - composer global require hirak/prestissimo
    # Install the packagees xvfb, libgtk2.0-0 and libgconf2-4, it must be moved to Dockerfile
    - sudo apt-get -y install xvfb 
    - sudo apt-get -y install libgtk2.0-0
    - sudo apt -y install libgconf2-4
    - npm install -g wait-on 
    - npm install -g yarn
    - yarn cache clean
    - npm install --unsafe-perm # Install the dependencies in the local node_modules folder
    - npm run install-all-ci # Install the dependencies in the local node_modules folder
  script:
    - npm run test-and-coverage                                                   # run the tests and code coverage
    - php client/bin/console cache:clear --env=test --no-debug     # clear the cache for the interfaces
    - php api/bin/console cache:clear --env=test --no-debug                     # clear the cache for the api
    - echo "${SSH_TEST_PRIVATE_KEY}" > id_rsa                   # 
    - chmod 700 id_rsa                                          # ssh identification on docker side 
    - mv id_rsa ${HOME}/.ssh                                    #
    - echo "${SSH_TEST_HOST_KEY}" > "${HOME}/.ssh/known_hosts"  #
    - rsync --stats --quiet --group=www-data -hrvz --exclude-from=.gitlab-exclude --delete  -e 'ssh -o StrictHostKeyChecking=no' ./ ${SSH_TEST_USER}@${SSH_TEST_IP}:/var/www/mobicoop/test    # rsync the files on the server
    - ssh -o StrictHostKeyChecking=no ${SSH_TEST_USER}@${SSH_TEST_IP} "cd /var/www/mobicoop/test/api; php bin/console doctrine:migrations:migrate --env=test -n;cd /var/www/mobicoop/test/admin;npm run build"    # database migration and admin build
  when: manual      # /!\ important : job executed manually /!\  
  except:
    refs:
      - tags    # job not executed on tags


###############################################################################################
############# Everything under this is execute only for Production (MASTER) ###################
###############################################################################################


    
#
# This deploy the doc in prod after production deploiement
#
pages:
 stage: doc
 script:
  - echo 'Deploying all the doc...'
  - npm run download-tools
  - npm run generateDocs
  - mkdir .public
  - cp -r docs/* .public
  - mv .public public
 dependencies:
   - master_deploy
 artifacts:
   paths:
   - public
 only:
   - master


#
# Deployment for master branch
#
master_deploy:
  stage: deploy
  before_script: # This is required to send the prod type no dev, since it creates errors
    - composer global require hirak/prestissimo
    # Install the packagees xvfb, libgtk2.0-0 and libgconf2-4, it must be moved to Dockerfile
    - sudo apt-get -y install xvfb 
    - sudo apt-get -y install libgtk2.0-0
    - sudo apt -y install libgconf2-4
    - npm install -g wait-on 
    - npm install -g yarn
    - yarn cache clean
    - npm install --unsafe-perm # Install the dependencies in the local node_modules folder
    - npm run install-all-ci # Install the dependencies in the local node_modules folderl
 # variables:
 #   APP_ENV: prod   # /!\ important : symfony env variable /!\
  script:
    - npm run test-and-coverage                                                  # run the tests and code coverage
    - php client/bin/console cache:clear --env=prod --no-debug     # clear the cache for the interfaces
    - php api/bin/console cache:clear --env=prod --no-debug                     # clear the cache for the api
    - echo "${SSH_PROD_PRIVATE_KEY}" > id_rsa                       #
    - chmod 700 id_rsa                                              #
    - mv id_rsa ${HOME}/.ssh                                        # ssh identification on docker side
    - echo "${SSH_PROD_HOST_KEY}" > "${HOME}/.ssh/known_hosts"      #
    - rsync --stats --quiet --group=www-data -hrvz --exclude-from=.gitlab-exclude --delete  -e 'ssh -o StrictHostKeyChecking=no' ./ ${SSH_PROD_USER}@${SSH_PROD_IP}:/var/www/mobicoop/prod    # rsync the files on the server
    - ssh -o StrictHostKeyChecking=no ${SSH_PROD_USER}@${SSH_PROD_IP} "cd /var/www/mobicoop/prod/api; php bin/console doctrine:migrations:migrate --env=prod -n;cd /var/www/mobicoop/prod/admin;npm run build"    # database migration and admin build
  environment:
    name: prod
    url: https://mobicoop.io
  when: manual      # /!\ important : job executed manually /!\
  only:     # job executed only on master branch
    - master


###############################################################################################
########## Everything under this is execute only for Reports (master) ###################
###############################################################################################

# Dependency Scanning
# (gitlab preconfigured job) 
#
dependency_scanning:    
  stage: reports
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
    - docker run
      --env DEP_SCAN_DISABLE_REMOTE_CHECKS="${DEP_SCAN_DISABLE_REMOTE_CHECKS:-false}"
      --volume "$PWD:/code"
      --volume /var/run/docker.sock:/var/run/docker.sock
      "registry.gitlab.com/gitlab-org/security-products/dependency-scanning:$SP_VERSION" /code
  artifacts:
    paths: [gl-dependency-scanning-report.json]
  only:     # job executed only on dev & master branches
    - master
    
#
# Static Application Security Testing (SAST)
# (gitlab preconfigured job) 
#
sast:
  stage : reports
  image: docker:stable
  cache: {}
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
    - docker run
      --env SAST_CONFIDENCE_LEVEL="${SAST_CONFIDENCE_LEVEL:-3}"
      --volume "$PWD:/code"
      --volume /var/run/docker.sock:/var/run/docker.sock
      "registry.gitlab.com/gitlab-org/security-products/sast:$SP_VERSION" /app/bin/run /code
  artifacts:
    reports:
      sast: gl-sast-report.json
  only:     # job executed only on dev & master branches
    - master

#
# License Management
#
license_management:
  image:
    name: "registry.gitlab.com/gitlab-org/security-products/license-management:$CI_SERVER_VERSION_MAJOR-$CI_SERVER_VERSION_MINOR-stable"
    entrypoint: [""]
  stage: reports
  allow_failure: true
  script:
    - sudo /run.sh analyze .
  artifacts:
    reports:
      license_management: gl-license-management-report.json
  only:     # job executed only on dev & master branches
    - master
