image: mobicoop/php-node-chromium

# Cache modules in between jobs
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
  - node_modules/
  - api/node_modules/
  - api/vendor/
  - interfaces/mobicoop/node_modules/
  - interfaces/mobicoop/vendor/
  - interfaces/admin/node_modules/

stages:
  - test
  - reports
  - deploy

###############################################################################################
############# Everything under this is execute for all push (branch) ##########################
###############################################################################################

branch_tests:
  stage: test
  variables:
    APP_ENV: dev # important because symfony use it
  before_script:
    - npm install --unsafe-perm
  script:
    - npm test
  only:
    - pushes
  except:
    refs:
      - tags
      - dev
      - master
    variables:
      - $CI_COMMIT_MESSAGE =~ /skip/

###############################################################################################
########## Everything under this is execute only for Reports (dev & master) ###################
###############################################################################################

#this job is taking too much time (>15min)
#code_quality:
#  stage: reports
#  image: docker:stable
#  variables:
#    DOCKER_DRIVER: overlay2
#  allow_failure: true
#  services:
#    - docker:stable-dind
#  script:
#    - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
#    - docker run
#      --env SOURCE_CODE="$PWD"
#      --volume "$PWD":/code
#      --volume /var/run/docker.sock:/var/run/docker.sock
#      "registry.gitlab.com/gitlab-org/security-products/codequality:$SP_VERSION" /code
#  artifacts:
#    paths: [gl-code-quality-report.json]
#  only:
#    - master
#    - dev

dependency_scanning:
  stage: reports
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
    - docker run
      --env DEP_SCAN_DISABLE_REMOTE_CHECKS="${DEP_SCAN_DISABLE_REMOTE_CHECKS:-false}"
      --volume "$PWD:/code"
      --volume /var/run/docker.sock:/var/run/docker.sock
      "registry.gitlab.com/gitlab-org/security-products/dependency-scanning:$SP_VERSION" /code
  artifacts:
    paths: [gl-dependency-scanning-report.json]
  only:
    - master
    - dev

sast:
  stage : reports
  image: docker:stable
  cache: {}
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
    - docker run
      --env SAST_CONFIDENCE_LEVEL="${SAST_CONFIDENCE_LEVEL:-3}"
      --volume "$PWD:/code"
      --volume /var/run/docker.sock:/var/run/docker.sock
      "registry.gitlab.com/gitlab-org/security-products/sast:$SP_VERSION" /app/bin/run /code
  artifacts:
    reports:
      sast: gl-sast-report.json
  #only:
  #  - master
  #  - dev

license_management:
  image:
    name: "registry.gitlab.com/gitlab-org/security-products/license-management:$CI_SERVER_VERSION_MAJOR-$CI_SERVER_VERSION_MINOR-stable"
    entrypoint: [""]
  stage: reports
  allow_failure: true
  script:
    - sudo /run.sh analyze .
  artifacts:
    reports:
      license_management: gl-license-management-report.json
  only:
    - master
    - dev

###############################################################################################
############# Everything under this is execute only for Tests (dev) ############################
###############################################################################################

dev_deploy:
  stage: deploy
  environment:
    name: test
    url: http://test.mobicoop.io
  only:
    - dev
  variables:
    APP_ENV: test # important because symfony use it
  before_script:
    - npm install --unsafe-perm
  script:
    - npm run testAndCoverage
    - php interfaces/mobicoop/bin/console cache:clear --env=test --no-debug
    - php api/bin/console cache:clear --env=test --no-debug
    - echo "${SSH_TEST_PRIVATE_KEY}" > id_rsa
    - chmod 700 id_rsa
    - mv id_rsa ${HOME}/.ssh
    - echo "${SSH_TEST_HOST_KEY}" > "${HOME}/.ssh/known_hosts"
    - rsync --stats --quiet --group=www-data -hrvz --exclude=.env --exclude=/api/config.json --delete  -e 'ssh -o StrictHostKeyChecking=no' ./ ${SSH_TEST_USER}@${SSH_TEST_IP}:/var/www/test
    - ssh -o StrictHostKeyChecking=no ${SSH_TEST_USER}@${SSH_TEST_IP} "cd /var/www/test/api; php bin/console doctrine:migrations:migrate -n"
  except:
    refs:
      - tags

###############################################################################################
############# Everything under this is execute only for Production (MASTER) ###################
###############################################################################################

master_tests:
  stage: test
  variables:
    APP_ENV: prod # important because symfony use it
  before_script:
    - npm install --unsafe-perm
  script:
    - npm run testAndCoverage
  only:
    - master

#pages:
#  stage: deploy
#  script:
#    - echo 'Deploying the doc...'
#    - npm run generateDocs
#  dependencies:
#    - test:prod
#  artifacts:
#    paths:
#    - interfaces/mobicoop/public/doc
#  only:
#    - master

master_deploy:
  stage: deploy
  before_script: # This if require to send the prod type no dev, since it creates errors
    - npm install --unsafe-perm
  variables:
    APP_ENV: prod # important because symfony use it
  script:
    - npm run testAndCoverage
    - php interfaces/mobicoop/bin/console cache:clear --env=prod --no-debug
    - php api/bin/console cache:clear --env=prod --no-debug
    - echo "${SSH_PROD_PRIVATE_KEY}" > id_rsa
    - chmod 700 id_rsa
    - mv id_rsa ${HOME}/.ssh
    - echo "${SSH_PROD_HOST_KEY}" > "${HOME}/.ssh/known_hosts"
    - rsync --stats --quiet --group=www-data -hrvz --exclude=.env --exclude=/api/config.json --delete  -e 'ssh -o StrictHostKeyChecking=no' ./ ${SSH_PROD_USER}@${SSH_PROD_IP}:/var/www/prod
    - ssh -o StrictHostKeyChecking=no ${SSH_PROD_USER}@${SSH_PROD_IP} "cd /var/www/prod/api; php bin/console doctrine:migrations:migrate -n"
  environment:
    name: prod
    url: http://mobicoop.io
  when: manual
  only:
    - master