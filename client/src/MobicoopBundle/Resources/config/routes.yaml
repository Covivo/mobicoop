################
# route naming #
################

# domain_subdomain_action ; underscore accepted only for action, no plural
# exceptions : for common routes like home, login, logout, signup...


##################
# default routes #
##################
home:
    path:
        fr: /
        en: /
    controller: Mobicoop\Bundle\MobicoopBundle\Controller\DefaultController::index


###############
# user routes #
###############

# login
user_login:
    path:
        fr: /utilisateur/connexion
        en: /user/login
    controller: Mobicoop\Bundle\MobicoopBundle\User\Controller\UserController::login

# logout
user_logout:
    path: /user/logout

# sign up
user_sign_up:
    path:
        fr: /utilisateur/inscription
        en: /user/signup
    controller: Mobicoop\Bundle\MobicoopBundle\User\Controller\UserController::userSignUp

user_sign_up_validation:
    path:
        fr: /utilisateur/inscription/validation/{token}
        en: /user/signup/validation/{token}
    defaults:
        token: ""   
    controller: Mobicoop\Bundle\MobicoopBundle\User\Controller\UserController::userSignUpValidation

# profile update
user_profile_update:
    path:
        fr: /utilisateur/profil/modifier
        en: /user/profile/update
    controller: Mobicoop\Bundle\MobicoopBundle\User\Controller\UserController::userProfileUpdate

# password update
user_password_update:
    path:
        fr: /utilisateur/mot-de-passe/modifier
        en: /user/password/update
    controller: Mobicoop\Bundle\MobicoopBundle\User\Controller\UserController::userPasswordUpdate

# password forgotten : ask for a new password
user_password_forgot:
    path:
        fr: /utilisateur/mot-de-passe/recuperation
        en: /user/password/recovery
    controller: Mobicoop\Bundle\MobicoopBundle\User\Controller\UserController::userPasswordRecovery

user_password_for_recovery:
    path:
        fr: /utilisateur/mot-de-passe/recuperation/envoi
        en: /user/password/recovery/send
    controller: Mobicoop\Bundle\MobicoopBundle\User\Controller\UserController::userPasswordForRecovery

user_update_password_reset:
    path:
        fr: /utilisateur/mot-de-passe/reset/update/{token}
        en: /user/password/reset/update/{token}
    requirements:
        token: .*
    controller: Mobicoop\Bundle\MobicoopBundle\User\Controller\UserController::userUpdatePasswordReset

# password forgotten : reset the password
user_password_reset:
    path:
        fr: /utilisateur/mot-de-passe/reset/{token}
        en: /user/password/reset/{token}
    requirements:
        token: .*
    controller: Mobicoop\Bundle\MobicoopBundle\User\Controller\UserController::userPasswordReset

# proposal list
user_proposal_list:
    path:
        fr: /utilisateur/annonces
        en: /user/ads
    controller: Mobicoop\Bundle\MobicoopBundle\User\Controller\UserController::userProposalList

# messages
user_message_list:
    path:
        fr: /utilisateur/messages
        en: /user/messages
    controller: Mobicoop\Bundle\MobicoopBundle\User\Controller\UserController::mailBox

user_message_direct_threads_list:
    path:
        fr: /utilisateur/messages/direct
        en: /user/messages/direct
    controller: Mobicoop\Bundle\MobicoopBundle\User\Controller\UserController::userMessageDirectThreadsList

user_message_carpool_threads_list:
    path:
        fr: /utilisateur/messages/covoiturage
        en: /user/messages/carpool
    controller: Mobicoop\Bundle\MobicoopBundle\User\Controller\UserController::userMessageCarpoolThreadsList

user_message_complete_thread:
    path:
        fr: /utilisateur/messages/{idMessage}/fil
        en: /user/messages/{idMessage}/thread
    controller: Mobicoop\Bundle\MobicoopBundle\User\Controller\UserController::userMessageThread

# send an internal message
user_message_send:
    path:
        fr: /utilisateur/messages/envoyer
        en: /user/messages/send
    controller: Mobicoop\Bundle\MobicoopBundle\User\Controller\UserController::userMessageSend

# get a message thread
user_message_thread:
    path:
        fr: /utilisateur/messages/{idFirstMessage}
        en: /user/messages/{idFirstMessage}
    controller: Mobicoop\Bundle\MobicoopBundle\User\Controller\UserController::userMessageThread
    requirements:
        idFirstMessage: '\d+'

# update an Ask from messages
user_message_update_ask:
    path:
        fr: /utilisateur/messages/updateAsk
        en: /user/messages/updateAsk
    controller: Mobicoop\Bundle\MobicoopBundle\User\Controller\UserController::userMessageUpdateAsk


##################
# carpool routes #
##################

# post an ad
carpool_ad_post:
    path:
        fr: /covoiturage/annonce/poster
        en: /carpool/ad/post
    controller: Mobicoop\Bundle\MobicoopBundle\Carpool\Controller\CarpoolController::carpoolAdPost

carpool_ad_first:
    path:
        fr: /covoiturage/annonce/premiere
        en: /carpool/ad/first
    controller: Mobicoop\Bundle\MobicoopBundle\Carpool\Controller\CarpoolController::carpoolAdPost

# post an ad from a search 
carpool_ad_post_search:
    path:
        fr: /covoiturage/recherche/poster
        en: /carpool/search/post
    controller: Mobicoop\Bundle\MobicoopBundle\Carpool\Controller\CarpoolController::carpoolAdPostFromSearch

# post an ad in a community
carpool_ad_post_community:
    path:
        fr: /communaute/{communityId}/annonce/poster
        en: /community/{communityId}/ad/share
    controller: Mobicoop\Bundle\MobicoopBundle\Carpool\Controller\CarpoolController::carpoolAdPostFromSearch
    requirements:
        communityId: '\d+'

# ad results 
carpool_ad_result:
    path:
        fr: /covoiturage/annonce/{id}/resultats
        en: /carpool/ad/{id}/results
    controller: Mobicoop\Bundle\MobicoopBundle\Carpool\Controller\CarpoolController::carpoolAdResult
    requirements:
        id: '\d+'

# search results (POST)
carpool_search_result:
    methods: [POST]
    path:
        fr: /covoiturage/recherche
        en: /carpool/search
    controller: Mobicoop\Bundle\MobicoopBundle\Carpool\Controller\CarpoolController::carpoolSearchResult

# search matching (AJAX)
carpool_search_matching:
    path:
        fr: /covoiturage/recherche/matching
        en: /carpool/search/matching
    controller: Mobicoop\Bundle\MobicoopBundle\Carpool\Controller\CarpoolController::carpoolSearchMatching

# carpool contact (POST)
carpool_contact:
    methods: [POST]
    path:
        fr: /covoiturage/contact
        en: /carpool/contact
    controller: Mobicoop\Bundle\MobicoopBundle\Carpool\Controller\CarpoolController::carpoolContact

# rdex provider (AJAX)
rdex_provider:
    path:
        fr: /provider/rdex/ 
        en: /provider/rdex/
    controller: Mobicoop\Bundle\MobicoopBundle\Carpool\Controller\CarpoolController::rdexProvider  
    
# rdex journey (AJAX)
rdex_journey:
    path:
        fr: /journey/rdex
        en: /journey/rdex
    controller: Mobicoop\Bundle\MobicoopBundle\Carpool\Controller\CarpoolController::rdexJourney    


####################
# community routes #
####################

# create community
community_create:
    path:
        fr: /communaute/creer
        en: /community/create
    controller: Mobicoop\Bundle\MobicoopBundle\Community\Controller\CommunityController::communityCreate
         
# display communities
community_list:
    path:
        fr: /communautes
        en: /community
    controller: Mobicoop\Bundle\MobicoopBundle\Community\Controller\CommunityController::communityList  

# display one community
community_show:
    path:
        fr: /communaute/{id}
        en: /community/{id}
    controller: Mobicoop\Bundle\MobicoopBundle\Community\Controller\CommunityController::communityShow  
    requirements:
        id: '\d+'

# join a community (AJAX)
community_join:
    path:
        fr: /communaute/{id}/rejoindre
        en: /community/{id}/join
    controller: Mobicoop\Bundle\MobicoopBundle\Community\Controller\CommunityController::communityJoin
    requirements:
        id: '\d+'

# get a community user (AJAX)
community_user:
    path:
        fr: /community-user/{id}
        en: /community-user/{id}
    controller: Mobicoop\Bundle\MobicoopBundle\Community\Controller\CommunityController::communityUser
    requirements:
        id: '\d+'

# get the last community users (AJAX)
community_last_users:
    path:
        fr: /community-last-users/{id}
        en: /community-last-users/{id}
    controller: Mobicoop\Bundle\MobicoopBundle\Community\Controller\CommunityController::communityLastUsers
    requirements:
        id: '\d+'

# get community members list (AJAX)
community_member_list:
    path:
        fr: /community-member-list/{id}
        en: /community-member-list/{id}
    controller: Mobicoop\Bundle\MobicoopBundle\Community\Controller\CommunityController::communityMemberList
    requirements:
        id: '\d+'        

# get all community proposals (AJAX)
community_proposals:
    path:
        fr: /community-proposals/{id}
        en: /community-proposals/{id}
    controller: Mobicoop\Bundle\MobicoopBundle\Community\Controller\CommunityController::communityProposals
    requirements:
        id: '\d+'       
        
##########################
# editorial pages routes #
##########################

# display project page
project:
    path:
        fr: /projet
        en: /project
    controller: Mobicoop\Bundle\MobicoopBundle\Article\Controller\ArticleController::showProject

# display CGU page
cgu:
    path:
        fr: /cgu
        en: /cgu
    controller: Mobicoop\Bundle\MobicoopBundle\Article\Controller\ArticleController::showCgu
        
# display news page
news:
    path:
        fr: /nouveautes
        en: /news
    controller: Mobicoop\Bundle\MobicoopBundle\Article\Controller\ArticleController::showNews

####################
# geography routes #
####################

# georouter route
georouter:
    path:
        fr: /georoute
        en: /georoute
    controller: Mobicoop\Bundle\MobicoopBundle\Geography\Controller\GeoRouterController::geoRoute