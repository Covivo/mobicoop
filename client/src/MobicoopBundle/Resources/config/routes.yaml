###############
# user routes #
###############

# login
user_login:
    path:
        fr: /utilisateur/connexion
        en: /user/login
    controller: Mobicoop\Bundle\MobicoopBundle\User\Controller\UserController::login

# sign up
user_sign_up:
    path:
        fr: /utilisateur/inscription
        en: /user/signup
    controller: Mobicoop\Bundle\MobicoopBundle\User\Controller\UserController::userSignUp

# create proposal
user_proposal_create:
    path:
        fr: /utilisateur/annonce/partager
        en: /user/proposal/create
    controller: Mobicoop\Bundle\MobicoopBundle\User\Controller\UserController::userProposalCreate

# proposals
user_proposals:
    path:
        fr: /utilisateur/annonces
        en: /user/ads
    controller: Mobicoop\Bundle\MobicoopBundle\User\Controller\UserController::userProposals

# messages
user_messages:
    path:
        fr: /utilisateur/messages
        en: /user/messages
    controller: Mobicoop\Bundle\MobicoopBundle\User\Controller\UserController::userMessages

# send an internal message
send_user_message:
    path:
        fr: /utilisateur/messages/envoyer
        en: /user/messages/send
    controller: Mobicoop\Bundle\MobicoopBundle\User\Controller\UserController::sendInternalMessage

# get a message thread
user_message_thread:
    path:
        fr: /utilisateur/messages/{idFirstMessage}
        en: /user/messages/{idFirstMessage}
    controller: Mobicoop\Bundle\MobicoopBundle\User\Controller\UserController::getThread
    requirements:
        idFirstMessage: '\d+'

# Update an Ask from messages
user_message_update_ask:
    path:
        fr: /utilisateur/messages/updateAsk
        en: /user/messages/updateAsk
    controller: Mobicoop\Bundle\MobicoopBundle\User\Controller\UserController::updateAsk

# profile update
user_profile_update:
    path:
        fr: /utilisateur/profil/modifier
        en: /user/profile/update
    controller: Mobicoop\Bundle\MobicoopBundle\User\Controller\UserController::userProfileUpdate

# password update
user_password_update:
    path:
        fr: /utilisateur/mot-de-passe/modifier
        en: /user/password/update
    controller: Mobicoop\Bundle\MobicoopBundle\User\Controller\UserController::userPasswordUpdate

# forgot password
user_password_forgot:
    path:
        fr: /utilisateur/mot-de-passe/oubli
        en: /user/password/forgot
    controller: Mobicoop\Bundle\MobicoopBundle\User\Controller\UserController::userPasswordForgot

user_password_reset:
    path:
        fr: /utilisateur/mot-de-passe/reset/{token}
        en: /user/password/reset/{token}
    requirements:
        token: .*
    controller: Mobicoop\Bundle\MobicoopBundle\User\Controller\UserController::userPasswordReset

# profile delete
user_profile_delete:
    path:
        fr: /utilisateur/profil/supprimer
        en: /user/profile/delete
    controller: Mobicoop\Bundle\MobicoopBundle\User\Controller\UserController::userProfileDelete


# logout
logout:
    path: /user/logout
    
##################
# carpool routes #
##################

# post an ad
carpool_ad_post:
    path:
        fr: /covoiturage/annonce/poster/{communityId}
        en: /carpool/ad/share/{communityId}
    controller: Mobicoop\Bundle\MobicoopBundle\Carpool\Controller\CarpoolController::post
    defaults:
        communityId: 0    

# ad results
carpool_ad_results:
    path:
        fr: /covoiturage/annonce/{id}/resultats
        en: /carpool/ad/{id}/results
    controller: Mobicoop\Bundle\MobicoopBundle\Carpool\Controller\CarpoolController::postResults
    requirements:
        id: '\d+'

# simple search results
carpool_results:
    path:
        fr: /covoiturage/recherche/{origin}/{destination}/{origin_latitude}/{origin_longitude}/{destination_latitude}/{destination_longitude}/{date}/resultats
        en: /carpool/search/{origin}/{destination}/{origin_latitude}/{origin_longitude}/{destination_latitude}/{destination_longitude}/{date}/results
    controller: Mobicoop\Bundle\MobicoopBundle\Carpool\Controller\CarpoolController::simpleSearchResults
    requirements:
        origin_latitude: '^[-+]?([1-8]?\d(\.\d+)?|90(\.0+)?).\s*[-+]?(180(\.0+)?|((1[0-7]\d)|([1-9]?\d))(\.\d+)?)'
        origin_longitude: '^[-+]?([1-8]?\d(\.\d+)?|90(\.0+)?).\s*[-+]?(180(\.0+)?|((1[0-7]\d)|([1-9]?\d))(\.\d+)?)'
        destination_latitude: '^[-+]?([1-8]?\d(\.\d+)?|90(\.0+)?).\s*[-+]?(180(\.0+)?|((1[0-7]\d)|([1-9]?\d))(\.\d+)?)'
        destination_longitude: '^[-+]?([1-8]?\d(\.\d+)?|90(\.0+)?).\s*[-+]?(180(\.0+)?|((1[0-7]\d)|([1-9]?\d))(\.\d+)?)'

matching_search:
    path:
        fr: /matching/search/
        en: /matching/search/
    controller: Mobicoop\Bundle\MobicoopBundle\Carpool\Controller\CarpoolController::MatchingSearch

# rdex provider (called with ajax)
rdex_provider:
    path:
        fr: /provider/rdex/ 
        en: /provider/rdex/
    controller: Mobicoop\Bundle\MobicoopBundle\Carpool\Controller\CarpoolController::rdexProvider  
    
# rdex journey (called with ajax)
rdex_journey:
    path:
        fr: /journey/rdex
        en: /journey/rdex
    controller: Mobicoop\Bundle\MobicoopBundle\Carpool\Controller\CarpoolController::rdexJourney    


####################
# community routes #
####################

# create community
community_create:
    path:
        fr: /creer/communaute
        en: /create/community
    controller: Mobicoop\Bundle\MobicoopBundle\Community\Controller\CommunityController::create
         
# display communities
community_list:
    path:
        fr: /communautes
        en: /communities
    controller: Mobicoop\Bundle\MobicoopBundle\Community\Controller\CommunityController::list  

# display one community
community_show:
    path:
        fr: /communaute/{id}
        en: /community/{id}
    controller: Mobicoop\Bundle\MobicoopBundle\Community\Controller\CommunityController::show  
    requirements:
        id: '\d+'

# join a community (called with ajax)
community_join:
    path:
        fr: /rejoindre-communaute/{id}
        en: /join-community/{id}
    controller: Mobicoop\Bundle\MobicoopBundle\Community\Controller\CommunityController::joinCommunity
    requirements:
        id: '\d+'

# get a community user (called with ajax)
community_user:
    path:
        fr: /community-user/{id}
        en: /community-user/{id}
    controller: Mobicoop\Bundle\MobicoopBundle\Community\Controller\CommunityController::communityUser
    requirements:
        id: '\d+'

# get the last community users (called with ajax)
community_last_users:
    path:
        fr: /community-last-users/{id}
        en: /community-last-users/{id}
    controller: Mobicoop\Bundle\MobicoopBundle\Community\Controller\CommunityController::getCommunityLastUsers
    requirements:
        id: '\d+'

# get community members list (called with ajax)
community_member_list:
    path:
        fr: /community-member-list/{id}
        en: /community-member-list/{id}
    controller: Mobicoop\Bundle\MobicoopBundle\Community\Controller\CommunityController::getCommunityMemberList
    requirements:
        id: '\d+'        

# get all community proposals (called with ajax)
community_proposals:
    path:
        fr: /community-proposals/{id}
        en: /community-proposals/{id}
    controller: Mobicoop\Bundle\MobicoopBundle\Community\Controller\CommunityController::getCommunityProposals
    requirements:
        id: '\d+'       
        
##########################
# editorial pages routes #
##########################

# display project page
project:
    path:
        fr: /projet
        en: /project
    controller: Mobicoop\Bundle\MobicoopBundle\Article\Controller\ArticleController::showProject

# display CGU page
cgu:
    path:
        fr: /cgu
        en: /cgu
    controller: Mobicoop\Bundle\MobicoopBundle\Article\Controller\ArticleController::showCgu
        
# display news page
news:
    path:
        fr: /nouveautes
        en: /news
    controller: Mobicoop\Bundle\MobicoopBundle\Article\Controller\ArticleController::showNews

####################
# geography routes #
####################

# geourouter route
georouter:
    path:
        fr: /georoute
        en: /georoute
    controller: Mobicoop\Bundle\MobicoopBundle\Geography\Controller\GeoRouterController::geoRoute