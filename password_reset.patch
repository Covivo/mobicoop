diff --git a/client/src/MobicoopBundle/Resources/config/routes.yaml b/client/src/MobicoopBundle/Resources/config/routes.yaml
index 4d03750f4c2f5a699594c6c539b174157c70bb25..584c97d48f0e37af9707d8d6c1b5644627925048 100644
--- a/client/src/MobicoopBundle/Resources/config/routes.yaml
+++ b/client/src/MobicoopBundle/Resources/config/routes.yaml
@@ -58,6 +58,19 @@ user_password_update:
         en: /user/password/update
     controller: Mobicoop\Bundle\MobicoopBundle\User\Controller\UserController::userPasswordUpdate
 
+# forgot password
+user_password_forgot:
+    path:
+        fr: /utilisateur/mot-de-passe/oubli
+        en: /user/password/forgot
+    controller: Mobicoop\Bundle\MobicoopBundle\User\Controller\UserController::userPasswordForgot
+
+user_password_reset:
+    path:
+        fr: /utiliateur/mot-de-passe/reset/{token}
+        en: /user/password/reset/{token}
+    controller: Mobicoop\Bundle\MobicoopBundle\User\Controller\UserController::userPasswordReset
+
 # profile delete
 user_profile_delete:
     path:
@@ -65,6 +78,7 @@ user_profile_delete:
         en: /user/profile/delete
     controller: Mobicoop\Bundle\MobicoopBundle\User\Controller\UserController::userProfileDelete
 
+
 # logout
 logout:
     path: /user/logout
diff --git a/client/src/MobicoopBundle/User/Controller/UserController.php b/client/src/MobicoopBundle/User/Controller/UserController.php
index acfb16ccc408dc12a2c99ba46135a331ab07eeea..eb72f48d26252802d827c37da978b78ff5074020 100644
--- a/client/src/MobicoopBundle/User/Controller/UserController.php
+++ b/client/src/MobicoopBundle/User/Controller/UserController.php
@@ -23,6 +23,7 @@
 
 namespace Mobicoop\Bundle\MobicoopBundle\User\Controller;
 
+use Herrera\Json\Exception\Exception;
 use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
 use Symfony\Component\Routing\Annotation\Route;
 use Symfony\Component\HttpFoundation\Request;
@@ -263,6 +264,60 @@ class UserController extends AbstractController
         ]);
     }
 
+
+    /**
+     * User password update.
+     */
+    public function userPasswordForgot(UserManager $userManager, Request $request)
+    {
+        if (null === $userManager->getLoggedUser()) {
+            throw Exception::create('{"error":"user already logged in."}');
+        }
+
+        $this->denyAccessUnlessGranted('password', $user);
+        $form = $this->createForm(
+            UserForm::class,
+            $user,
+            ['validation_groups'=>['password']]
+        );
+
+        $form->handleRequest($request);
+        $error = false;
+
+        if ($form->isSubmitted() && $form->isValid()) {
+            if ($user = $userManager->updateUserPassword($user)) {
+                // after successful update, we re-log the user
+                $token = new UsernamePasswordToken($user, null, 'main', $user->getRoles());
+                $this->get('security.token_storage')->setToken($token);
+                $this->get('session')->set('_security_main', serialize($token));
+                return $this->redirectToRoute('user_profile_update');
+            }
+            $error = true;
+        }
+
+        return $this->render('@Mobicoop/user/password.html.twig', [
+            'form' => $form->createView(),
+            'user' => $user,
+            'error' => $error
+        ]);
+    }
+
+    /**
+     * Reset password
+     */
+    public function userPasswordReset(UserManager $userManager, Request $request, string $token)
+    {
+        if ($request->isMethod('POST')) {
+            $user = $userManager->findByToken($token);
+
+            if (null === $user) {
+                //TODO: erreur
+            } else {
+                return $this->render();
+            }
+        }
+    }
+
     /**
      * Delete the current user.
      */
diff --git a/client/src/MobicoopBundle/User/Service/UserManager.php b/client/src/MobicoopBundle/User/Service/UserManager.php
index 435293e753c5b0bdeb7a4155ab3fae2918de0e14..3d4c1dd7a75f9906ea0007146cc99b23272f0937 100644
--- a/client/src/MobicoopBundle/User/Service/UserManager.php
+++ b/client/src/MobicoopBundle/User/Service/UserManager.php
@@ -85,6 +85,30 @@ class UserManager
         return null;
     }
 
+    /**
+     * Search user by reset token
+     *
+     * @param string $token
+     *
+     * @return User|null The user found or null if not found.
+     */
+    public function findByToken (string $token)
+    {
+
+    }
+
+    /**
+     * Search user by reset email
+     *
+     * @param string $email
+     *
+     * @return User|null The user found or null if not found.
+     */
+    public function findByEmail (string email)
+    {
+        return null;
+    }
+
     /**
      * Get masses of a user
      *

